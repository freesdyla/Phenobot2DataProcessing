cmake_minimum_required(VERSION 2.8)
set(CMAKE_BUILD_TYPE Release)
project(Pheno2DataProc)
find_package(OpenCV REQUIRED)
#find_package(CUDA REQUIRED)
find_package(PCL 1.8 REQUIRED)
find_package (GeographicLib 1.48 REQUIRED)
#find_package(CGAL)
#include(FindCUDA)
#include_directories(/usr/local/cuda/include)
#include( ${CGAL_USE_FILE} )
include_directories(${PCL_INCLUDE_DIRS})
include_directories(hough3d)
link_directories( ${PCL_LIBRARY_DIRS} )
add_definitions(${PCL_DEFINITIONS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -std=c++11")
#set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -Xcompiler -fopenmp")
#set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -Xcompiler -O3")
#cuda_add_executable(pheno2proc main.cpp)
add_executable(pheno2proc main.cpp hough3d/hough.h hough3d/hough.cpp hough3d/pointcloud3.h hough3d/pointcloud3.cpp hough3d/sphere.h hough3d/sphere.cpp hough3d/vector3d.h hough3d/vector3d.cpp) #voronoi_diagram.h)
#target_link_libraries(pheno2proc ${OpenCV_LIBS} ${PCL_LIBRARIES} /usr/local/cuda/lib64/libcudart.so /usr/local/cuda/lib64/libcurand.so ${GeographicLib_LIBRARIES})
target_link_libraries(pheno2proc ${OpenCV_LIBS} ${PCL_LIBRARIES} ${GeographicLib_LIBRARIES})
